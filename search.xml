<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/04/hello-world/"/>
      <url>/2022/09/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建博客系统以及Next主题配置</title>
      <link href="/2022/09/04/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8ANext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/09/04/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8ANext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>首先介绍如何使用Hexo+Github来搭建一个属于自己的个人博客，无需额外服务器，无需编写代码手动开发。接着讲解如何使用Next来美化自己的博客。</p><span id="more"></span><h2 id="一、前期预安装"><a href="#一、前期预安装" class="headerlink" title="一、前期预安装"></a>一、前期预安装</h2><h3 id="1、Node-js和Npm安装"><a href="#1、Node-js和Npm安装" class="headerlink" title="1、Node.js和Npm安装"></a>1、Node.js和Npm安装</h3><ul><li><p>中文地址 <a href="http://nodejs.cn/download/">下载 | Node.js 中文网 (nodejs.cn)</a></p></li><li><p><code>node -v</code> 输出v16.16.0</p></li><li><p><code>npm -v</code> 输出8.16.0</p></li></ul><h3 id="2、Git的安装"><a href="#2、Git的安装" class="headerlink" title="2、Git的安装"></a>2、Git的安装</h3><ul><li><p>下载地址：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p></li><li><p><code>git -v</code> 输出git version 2.37.1.windows.1</p></li><li><p>Github账号的注册-&gt;SSH免密连接：<code>ssh-keygen -t rsa -C  github注册时的邮箱地址</code>  以生成ssh密钥。</p><ul><li><p>复制C盘中用户目录\.ssh\id_rsa.pub文件内容到github主页-&gt;个人设置 -&gt; SSH and GPG keys -&gt; New SSH key</p></li><li><p>测试是否可以免密连接 <code>ssh -T git@github.com</code></p></li></ul></li></ul><h3 id="3、Hexo的安装"><a href="#3、Hexo的安装" class="headerlink" title="3、Hexo的安装"></a>3、Hexo的安装</h3><ul><li><p>安装命令：<code>npm install hexo-cli -g</code></p></li><li><p><code>hexo -v</code>  输出hexo-cli: 4.3.0等信息</p></li></ul><h2 id="二、在本地部署Hexo"><a href="#二、在本地部署Hexo" class="headerlink" title="二、在本地部署Hexo"></a><strong>二、在本地部署Hexo</strong></h2><h3 id="1、hexo-init"><a href="#1、hexo-init" class="headerlink" title="1、hexo init"></a>1、hexo init</h3><ul><li><p>创建一个Blog的本地文件夹(e.g.Blog)，用于存放本地的bolg文件，等待后续deploy到github上</p></li><li><p>创建好后，进入该文件夹，右键选择Git bash here</p></li><li><p>将github上的hexo初始项目克隆到本地：<code>Hexo init</code> 成功运行之后即可在本地看到克隆下来的Hexo项目，包含了一些最原始的配置。</p><p><img src="/2022/09/04/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8ANext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/image-20220904161554496.png" alt="hexo init运行结果"></p></li></ul><img src="/2022/09/04/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8ANext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/image-20220904161738596.png" alt="本地生成文件" style="zoom: 67%;"><h3 id="2、hexo-s"><a href="#2、hexo-s" class="headerlink" title="2、hexo s"></a>2、hexo s</h3><ul><li><code>hexo s -p 5555</code>：-p指定端口号，默认为4000（可选）；s==server；–config指定Hexo主配置文件</li></ul><p><img src="/2022/09/04/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8ANext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/image-20220904162425601.png" alt="hexo s运行结果"></p><h3 id="3、http-localhost-4000"><a href="#3、http-localhost-4000" class="headerlink" title="3、http://localhost:4000/"></a>3、<a href="http://localhost:4000/">http://localhost:4000/</a></h3><ul><li>在本地浏览器地址栏中输入 <a href="http://localhost:4000/">http://localhost:4000/</a> 即可访问到默认的博客主页</li></ul><img src="/2022/09/04/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8ANext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/image-20220904162715238.png" alt="博客主页" style="zoom: 67%;"><h2 id="三、Hexo界面主题–Next"><a href="#三、Hexo界面主题–Next" class="headerlink" title="三、Hexo界面主题–Next"></a>三、<strong>Hexo界面主题–Next</strong></h2><blockquote><p>Next主题：<a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></p><p>Matery主题：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p></blockquote><h3 id="1、设定主题"><a href="#1、设定主题" class="headerlink" title="1、设定主题"></a>1、设定主题</h3><blockquote><p>Next官方文档：<a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a></p><p>图标网址：<a href="https://fontawesome.com/icons">https://fontawesome.com/icons</a></p><p>阿里巴巴矢量图标库：<a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p></blockquote><ul><li><p>在github上下载相关主题到themes目录下：git clone 主题http链接  themes/主题名</p><p><code>git clone https://github.com/theme-next/hexo-theme-next.git themes/next</code></p></li><li><p>在hexo的_config.yml文件中修改 <code>theme: 主题名</code></p></li><li><p>修改完成之后使用如下命令： <code>hexo g</code> 重新生成html文件</p></li><li><p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public中的html内容，然后再执行<code>hexo g</code></p></li></ul><h3 id="2、修改主题"><a href="#2、修改主题" class="headerlink" title="2、修改主题"></a>2、修改主题</h3><blockquote><p>修改主题配置文件/themes/next/_config.yml</p><p><code>npm list</code>  查看使用npm安装的有关hexo的包</p></blockquote><ul><li><h4 id="添加新的页面"><a href="#添加新的页面" class="headerlink" title="添加新的页面"></a>添加新的页面</h4><ul><li><p><code>hexo new page tags</code> </p></li><li><p>在生成的source/tags/index.md文件中添加如下内容：一定要指定type: tags</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">type: tags</span><br><span class="line">date: 2022-09-03 13:34:26</span><br></pre></td></tr></table></figure></li><li><p>在Next主题配置文件_config.yml中添加tags页面的相关配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br></pre></td></tr></table></figure></li><li><p>随后按照同样的方法，生成其余两个页面：categories、about</p></li></ul></li><li><h4 id="添加新的文章"><a href="#添加新的文章" class="headerlink" title="添加新的文章"></a>添加新的文章</h4><ul><li><p><code>hexo new "Hexo从0到1"</code></p></li><li><p>接着在source/_posts文件夹中生成的对应md文件中编辑文章内容</p></li></ul></li><li><h4 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h4><ul><li><p>安装相关插件：<code>npm install hexo-generator-search --save</code></p></li><li><p>修改Next主题配置文件_config.yml的local_search的enable为true</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 3</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure></li><li><p>在 Hexo 配置文件_config.yml 中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 搜索栏</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="图片的显示"><a href="#图片的显示" class="headerlink" title="图片的显示"></a>图片的显示</h4><ul><li><p>笔者使用Typora来编写markdown文件，在markdown语法中插入图片使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](网络图片链接/绝对路径/相对路径)</span><br></pre></td></tr></table></figure></li><li><p>但上述方式使用Hexo渲染之后无法正常显示，hexo官方指定的显示图片语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% asset_img a.png [图片] %}</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>这种方法在markdown中却不适用，两者冲突。解决方法有以下两种：</p></blockquote><ul><li><p>安装插件实现用markdown语法显示图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">参考： https://cloud.tencent.com/developer/article/1702112</span><br><span class="line">1、Hexo的配置</span><br><span class="line">首先配置hexo的_config.yml文件, 将 post_asset_folder 设置为true, 这样每次new 生成一个文章时都会同步生成一个同名的文件夹,然后设置相对或绝对路径。</span><br><span class="line">接着安装插件 asset-image，设置图片为相对路径。npm install https://github.com/CodeFalling/hexo-asset-image</span><br><span class="line">最后hexo clean &amp;&amp; hexo generate &amp;&amp; hexo s 运行查看</span><br><span class="line"></span><br><span class="line">2、Typora中的配置</span><br><span class="line">在文件-&gt;偏好设置-&gt;图像-&gt;插入图片时，选择为复制到指定路径，然后设置为./${filename}/；并对本地位置的图片应用上述规则。</span><br><span class="line"></span><br><span class="line">注意：后续在markdown中插入图片时，修改图片路径中的 \ 为 / ,并且不带 .或者./ ，直接写目录/图片</span><br><span class="line">此种方式如有文件夹中存在中文则会url转码,也会显示不正常,解决方法: new 文件时使用英文名,手动设置文章标题即可</span><br></pre></td></tr></table></figure></li><li><p>搭建阿里云图床+typora配置实现对象存储</p></li></ul></li></ul><blockquote><p>to be continue…</p></blockquote><ul><li><h4 id="侧边栏的实时时间"><a href="#侧边栏的实时时间" class="headerlink" title="侧边栏的实时时间"></a>侧边栏的实时时间</h4></li><li><h4 id="留言"><a href="#留言" class="headerlink" title="留言"></a>留言</h4></li><li><h4 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h4></li></ul><h2 id="四、将博客部署到Github上以公网访问"><a href="#四、将博客部署到Github上以公网访问" class="headerlink" title="四、将博客部署到Github上以公网访问"></a>四、<strong>将博客部署到Github上以公网访问</strong></h2><h3 id="1、在Github上新建一个名为xingqitianbuxiayu-github-io的仓库"><a href="#1、在Github上新建一个名为xingqitianbuxiayu-github-io的仓库" class="headerlink" title="1、在Github上新建一个名为xingqitianbuxiayu.github.io的仓库"></a>1、在Github上新建一个名为xingqitianbuxiayu.github.io的仓库</h3><ul><li>xingqitianbuxiayu为唯一的账户名称，xingqitianbuxiayu.github.io唯一，不可换成其他名称</li></ul><h3 id="2、修改Hexo的-config-yml文件"><a href="#2、修改Hexo的-config-yml文件" class="headerlink" title="2、修改Hexo的_config.yml文件"></a>2、修改Hexo的_config.yml文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: https://github.com/xingqitianbuxiayu/xingqitianbuxiayu.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><h3 id="3、运行命令，生成html文件并部署到github上"><a href="#3、运行命令，生成html文件并部署到github上" class="headerlink" title="3、运行命令，生成html文件并部署到github上"></a>3、运行命令，生成html文件并部署到github上</h3><ul><li><code>npm install hexo-deployer-git --save</code> 需先安装，否则hexo d时会报错</li><li><code>hexo clean</code> 来清理一下public的内容</li><li><code>hexo g</code>  将本地的Hexo文件生成为html文件 g=generation –config指定配置文件（可选） </li><li><code>hexo d</code>  将本地文件发布到github pages，d=deploy</li></ul><h3 id="4、可能遇到的问题"><a href="#4、可能遇到的问题" class="headerlink" title="4、可能遇到的问题"></a>4、可能遇到的问题</h3><ul><li><p>问题1：error: RPC failed; curl 28 OpenSSL SSL_read: Connection was aborted, errno 10053 send-pack: unexpected disconnect while reading sideband packet fatal: the remote end hung up unexpectedly</p><ul><li>解决办法：<a href="https://blog.csdn.net/weixin_42881768/article/details/114888762">https://blog.csdn.net/weixin_42881768/article/details/114888762</a></li><li><code>git config --global http.sslVerify "false"</code>：针对所有远程服务器全局执行，使git忽略ssl证书错误（把忽略证书错误的设置限定在特定的仓库）</li></ul></li><li><p>问题2：git提示“warning: LF will be replaced by CRLF”的解决办法</p><ul><li>解决办法：<a href="https://blog.csdn.net/u012757419/article/details/105614028">https://blog.csdn.net/u012757419/article/details/105614028</a></li><li><code>git config --global core.autocrlf true</code>：让git提交时自动将windows的回车CR和换行LF转换成LF</li></ul></li></ul><h3 id="5、成功后访问-https-xingqitianbuxiayu-github-io-即可"><a href="#5、成功后访问-https-xingqitianbuxiayu-github-io-即可" class="headerlink" title="5、成功后访问 https://xingqitianbuxiayu.github.io/ 即可"></a>5、成功后访问 <a href="https://xingqitianbuxiayu.github.io/">https://xingqitianbuxiayu.github.io/</a> 即可</h3>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
